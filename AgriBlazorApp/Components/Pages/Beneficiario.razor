@page "/beneficiario"
@attribute [StreamRendering]

<PageTitle>Beneficiario</PageTitle>

<h1>Beneficiario</h1>

<p>This component demonstrates showing data.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Idade</th>
                <th>Nome</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.Idade</td>
                    <td>@forecast.Nome</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private BeneficiarioModel[]? forecasts;

    protected override async Task OnInitializedAsync()
    {
        // Simulate asynchronous loading to demonstrate streaming rendering
        await Task.Delay(500);

        var startDate = DateOnly.FromDateTime(DateTime.Now);
        var summaries = new[] { "Jony", "Rambo", "Raul", "Marco", "Marcio" };
        forecasts = Enumerable.Range(1, 5).Select(index => new BeneficiarioModel
        {
            Date = startDate.AddDays(index),
            Idade = Random.Shared.Next(18, 55),
            Nome = summaries[Random.Shared.Next(summaries.Length)]
        }).ToArray();
    }

    private class BeneficiarioModel
    {
        public DateOnly Date { get; set; }
        public int Idade { get; set; }
        public string? Nome { get; set; }
    }
}
